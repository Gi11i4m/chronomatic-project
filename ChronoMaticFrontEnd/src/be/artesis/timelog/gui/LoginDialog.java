package be.artesis.timelog.gui;

import be.artesis.timelog.model.CreatorFromJSON;
import be.artesis.timelog.model.Validator;
import be.artesis.timelog.model.WebserviceException;
import be.artesis.timelog.view.DataInputException;
import be.artesis.timelog.view.Gebruiker;
import be.artesis.timelog.view.Opdrachtgever;
import be.artesis.timelog.view.Project;
import be.artesis.timelog.view.Taak;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.IOException;
import java.net.ConnectException;
import javax.swing.JOptionPane;
import org.json.JSONException;
//
import java.awt.Dimension;
import java.awt.Point;

import javafx.application.Platform;
import javafx.embed.swing.JFXPanel;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import javax.swing.*;

import javax.swing.JPanel;
import java.awt.CardLayout;
import java.awt.Container;
import java.awt.event.ActionEvent;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
/**
 * @author ChronoMatic
 */
public class LoginDialog extends javax.swing.JDialog {

    private boolean result;
    public Validator validator;
    private java.awt.Frame parent;
    
    JPanel basisPanel = new JPanel();
    
    private CardLayout layout;
    private JFXPanel browserPanel;
    private WebEngine webEngine;
    
    private final String BASISPANEL = "basis";
    private final String BROWSERPANEL  = "browser";

    public LoginDialog(java.awt.Frame parent, boolean modal, Validator validator) {
        super(parent, modal);
        this.parent = parent;
        this.validator = validator;
        result = false;
        initComponents();
        setLocationRelativeTo(parent);
        getContentPane().setBackground(Color.LIGHT_GRAY);
        getRootPane().setDefaultButton(loginJButton);

        //NIET VERWIJDEREN!
        // Panels
        //browserPanel = new JFXPanel();
        //Container pane = getContentPane();
        //layout = new CardLayout();
        //pane.setLayout(layout);
        
        //pane.add(basisPanel, BASISPANEL);
        //pane.add(browserPanel, BROWSERPANEL);
        
        //AbstractButton browserGoBackButton = null;
		//browserGoBackButton.setText("Aanmelden met een andere account");
        //browserPanel.add(browserGoBackButton);

        //browserGoBackButton.setSize(new Dimension(250, 27));
        //browserGoBackButton.setLocation(0,460);
        //browserPanel.setSize(new Dimension(720, 520));
        //fxPanel.setLocation(new Point(0, 27));
        
        //this.displayTab(BASISPANEL);
    }
    
  //om de tabs in te stellen
    private void displayTab(String name) {
        layout.show(this.getContentPane(), name);
    }

    public boolean getResult() {
        return result;
    }

    private boolean login(String username, char[] password) throws ConnectException, IOException, JSONException {
        boolean validatorResult = false;
        try {
            validatorResult = validator.login(username, new String(password));
            //return true;
        } catch (WebserviceException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        return validatorResult;
    }
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usernameJLabel = new javax.swing.JLabel();
        passwordJLabel = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        loginJButton = new javax.swing.JButton();
        passwordJPasswordField = new javax.swing.JPasswordField();
        registreerJLabel = new javax.swing.JLabel();

        //NIET VERWIJDEREN!!
        //basisPanel.add(usernameJLabel);
        //basisPanel.add(passwordJLabel);
        //basisPanel.add(usernameJTextField);
        //basisPanel.add(loginJButton);
        //basisPanel.add(passwordJPasswordField);
        //basisPanel.add(registreerJLabel);
        
        setTitle("Log in");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(64, 64, 64));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(null);
        setName("LoginDialog"); // NOI18N
        setResizable(false);

        usernameJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        usernameJLabel.setForeground(new java.awt.Color(0, 51, 0));
        usernameJLabel.setText("Username");

        passwordJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        passwordJLabel.setForeground(new java.awt.Color(0, 51, 0));
        passwordJLabel.setText("Password");

        loginJButton.setText("Login");
        loginJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginJButtonActionPerformed(evt);
            }
        });

        registreerJLabel.setBackground(new java.awt.Color(0, 0, 0));
        registreerJLabel.setText("Nog geen account? Registreer!");
        registreerJLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registreerJLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                textMouseHover(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                textMouseHover(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(registreerJLabel))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(passwordJLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(passwordJPasswordField))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(usernameJLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(loginJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameJLabel)
                    .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordJLabel)
                    .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(registreerJLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        registreerJLabel.setBackground(Color.black);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginJButtonActionPerformed
        try {
            if (usernameJTextField.getText().equals("")) {
                try {
                    UserControl.setUser(new Gebruiker("Flebus", "Gilliam", "Gi11i4m", "gi11i4m@gmail.com")); // tijdelijke user
                    UserControl.getUser().addOpdrachtgever(new Opdrachtgever("Flebus", "Gilliam", "Mot-art", "blabla", "0475", 456));
                    UserControl.getUser().addOpdrachtgever(new Opdrachtgever("Schouten", "Girmi", "Artesis", "bla", "0478", 457));
                    UserControl.getUser().addProject(new Project("Test project 1", 456, 1343059472, 1453059472));
                    UserControl.getUser().addProject(new Project("Test project 2", 457, 1243059472, 1553059472));
                    UserControl.getUser().getProjects().get(1).addTaak(new Taak("Test taak", 1343059472, 1453059472, ""));
                } catch (DataInputException ex) {
                    //JOptionPane.showMessageDialog(this, ex.getMessage());
                }
                result = true;
                this.dispose();
            } else if (login(usernameJTextField.getText(), passwordJPasswordField.getPassword())) {
                // Placeholder: new user object aanmaken
                // Tijdelijk: set user en test variabelen, moeten vervangen worden door user object te vullen met database projecten en taken
                /*UserControl.setUser(new Gebruiker("Flebus", "Gilliam", "Gi11i4m", "gi11i4m@gmail.com")); // tijdelijke user
                 UserControl.getUser().addProject(new Project("Test project 1", new Opdrachtgever("Flebus", "Gilliam", "Mot-art", "blabla", "0475"), 1343059472, 1453059472));
                 UserControl.getUser().addProject(new Project("Test project 2", new Opdrachtgever("Schouten", "Girmi", "Artesis", "bla", "0478"), 1243059472, 1553059472));*/

                /*Threads
                 CreateUserThread userThread = new CreateUserThread();
                 CreateProjectThread projectThread = new CreateProjectThread();

                 Thread createUser = new Thread(userThread);
                 Thread createProject = new Thread(projectThread);

                 createUser.start();
                 createProject.start();*/
                UserControl.setUser(CreatorFromJSON.createGebruiker(validator.getSessionKey()));
                UserControl.getUser().setProjects(CreatorFromJSON.createProjecten(validator.getSessionKey()));
                UserControl.getUser().setOpdrachtgevers(CreatorFromJSON.createOpdrachtgevers(validator.getSessionKey()));                
                
                for(int i = 0; i < UserControl.getUser().getProjects().size(); i++){
                    
                    UserControl.getUser().getProject(i).setTaken(CreatorFromJSON.createTaken(validator.getSessionKey(), UserControl.getUser().getProject(i).getId()));
                }
                
                for(int i = 0; i < UserControl.getUser().getProjects().size(); i++){
                    System.out.println("project: "+UserControl.getUser().getProject(i));
                    for(int j = 0; j <UserControl.getUser().getProject(i).getTaken().size(); j++){
                        UserControl.getUser().getProject(i).getTaak(j).setGewerkteTijd( CreatorFromJSON.createTijdspannes(validator.getSessionKey(), UserControl.getUser().getProject(i).getTaak(j).getID(),false));                     
                        UserControl.getUser().getProject(i).getTaak(j).setPauze( CreatorFromJSON.createTijdspannes(validator.getSessionKey(), UserControl.getUser().getProject(i).getTaak(j).getID(),true));                     
                        System.out.println("taak " +UserControl.getUser().getProject(i).getTaak(j).getID()+ ": " + UserControl.getUser().getProject(i).getTaak(j));
                        System.out.println("gewerkt: " + UserControl.getUser().getProject(i).getTaak(j).getGewerkteTijd());
                        System.out.println("pauze: "+UserControl.getUser().getProject(i).getTaak(j).getPauze());                       
                    }
                }
                
                
                //UserControl.getUser().getProjects().s

                result = true;
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Login failed");
            }
        } catch (JSONException | HeadlessException | IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_loginJButtonActionPerformed

    private void textMouseHover(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_textMouseHover
        if (evt.getComponent().getForeground() == Color.red) {
            evt.getComponent().setForeground(Color.black);
        } else {
            evt.getComponent().setForeground(Color.red);
        }
    }//GEN-LAST:event_textMouseHover

    private void registreerJLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registreerJLabelMouseClicked
        setAlwaysOnTop(false);
        NewUserDialog newUser = new NewUserDialog(parent, true);
        newUser.setVisible(true);
        setAlwaysOnTop(true);
    }//GEN-LAST:event_registreerJLabelMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton loginJButton;
    private javax.swing.JLabel passwordJLabel;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JLabel registreerJLabel;
    private javax.swing.JLabel usernameJLabel;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}